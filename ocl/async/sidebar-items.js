initSidebarItems({"struct":[["BufferSink","Represents mapped memory and allows frames of data to be 'flushed' (written) from host-accessible mapped memory region into its associated device-visible buffer in a repeated fashion."],["BufferSinkInner",""],["BufferStream","Represents mapped memory and allows frames of data to be 'flooded' (read) from a device-visible `Buffer` into its associated host-accessible mapped memory region in a repeated fashion."],["BufferStreamInner",""],["FutureFlood",""],["FutureFlush",""],["FutureGuard","A future that resolves to a read or write guard after ensuring that the data being guarded is appropriately locked during the execution of an OpenCL command."],["FutureMemMap","A future which resolves to a `MemMap` as soon as its creating command completes."],["MemMap","A view of memory mapped by `clEnqueueMap{...}`."],["OrderLock","A lock with conserved global order which interoperates with OpenCL events and Rust futures to provide exclusive access to data."],["ReadGuard","Allows access to the data contained within a lock just like a mutex guard."],["RwVec","A locking `Vec` which interoperates with OpenCL events and Rust futures to provide exclusive access to data."],["WriteGuard","Allows access to the data contained within just like a mutex guard."]],"trait":[["OrderGuard","A read or write guard for an `OrderLock`."]],"type":[["FutureReadGuard",""],["FutureWriteGuard",""]]});